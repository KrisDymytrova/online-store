import React, { useState } from 'react';
import PropTypes from 'prop-types';
import { Box, Button, TextField, Typography } from '@mui/material';
import { Formik, Form, Field } from 'formik';
import * as Yup from 'yup';
import { styles } from './styles';

const SubscriptionForm = ({ onSubmit }) => {
    const [submitted, setSubmitted] = useState(false);

    const validationSchema = Yup.object({
        email: Yup.string().email('–ù–µ–≤—ñ—Ä–Ω–∞ e-mail –∞–¥—Ä–µ—Å–∞').required('–ü–æ–ª–µ –æ–±–æ–≤\'—è–∑–∫–æ–≤–µ –¥–æ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è'),
    });

    return (
        <Formik
            initialValues={{ email: '' }}
            validationSchema={validationSchema}
            onSubmit={(values, { setSubmitting, resetForm }) => {
                onSubmit(values);
                setSubmitting(false);
                resetForm();
                setSubmitted(true);
            }}
        >
            {({ isSubmitting }) => (
                <Form>
                    <Box sx={styles.formContainer}>
                        <Typography sx={styles.formTitle}>–ü—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ –∑–Ω–∏–∂–∫–∏!</Typography>
                        <Typography sx={styles.formSubtitle}>–ù–µ —Ç—É—Ä–±—É–π—Ç–µ—Å—å, –º–∏ –Ω–µ —Å–ø–∞–º–∏–º–æ <span role="img" aria-label="smile">üòç</span></Typography>
                        <Field name="email">
                            {({ field, form: { touched, errors } }) => (
                                <TextField
                                    {...field}
                                    type="email"
                                    label="E-mail"
                                    fullWidth
                                    margin="normal"
                                    error={touched.email && !!errors.email}
                                    helperText={touched.email && errors.email}
                                />
                            )}
                        </Field>
                        <Button
                            type="submit"
                            sx={styles.formButton}
                            disabled={isSubmitting}
                        >
                            –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏
                        </Button>
                        {submitted && (
                            <Typography sx={styles.successMessage}>–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–ø–∏—Å–∞–ª–∏—Å—è –Ω–∞ –Ω–∞—à—ñ –Ω–æ–≤–∏–Ω–∏!</Typography>
                        )}
                    </Box>
                </Form>
            )}
        </Formik>
    );
};

SubscriptionForm.propTypes = {
    onSubmit: PropTypes.func.isRequired,
};

export default SubscriptionForm;
